openapi: 3.0.0
info:
  title: Authentication API
  description: API for token-based authentication with IP binding and rate limiting
  version: 1.0.0
servers:
  - url: http://localhost:3030/
    description: Test server (Change to your server URL in ./docs/openapi.yaml)
  - url: https://localhost:3030/
    description: Test server (HTTPS) (Change to your server URL in ./docs/openapi.yaml)

components:
  securitySchemes:
    TokenAuth:
      type: apiKey
      in: header
      name: X-Auth-Token
      description: Authentication token required for all protected endpoints
  
  schemas:
    Error:
      type: object
      properties:
        Message:
          type: string
          description: Error message
        Code:
          type: integer
          description: Error code
        Description:
          type: string
          description: Detailed error description
      required:
        - Message
        - Code
    
    Success:
      type: object
      properties:
        Message:
          type: string
          example: OK
        Code:
          type: integer
          example: 100
      required:
        - Message
        - Code
  
  parameters:
    X-Forwarded-For:
      name: X-Forwarded-For
      in: header
      required: false
      schema:
        type: string
      description: IP address of the client (optional, will use socket.remoteAddress if not provided. If you use swagger-ui for testing, you MUST provide this header.)
    
    X-Auth-Token:
      name: X-Auth-Token
      in: header
      required: true
      schema:
        type: string
      description: Authentication token generated by the /token endpoint
  
  responses:
    BadRequest_InvalidIP:
      description: Bad Request - IP is not valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            Message: Bad Request
            Code: 392
            Description: IP is not valid
    
    BadRequest_UndefinedIP:
      description: Bad Request - IP is undefined
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            Message: Bad Request
            Code: 393
            Description: IP is undefined
    
    InternalError_DeletingToken:
      description: Internal Server Error while deleting token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            Message: Internal Server Error
            Code: 380
            Description: Error while deleting token
    
    InternalError_WritingToken:
      description: Internal Server Error while writing token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            Message: Internal Server Error
            Code: 381
            Description: Error while writing token
    
    Unauthorized_InvalidToken:
      description: Unauthorized - Token is not valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            Message: Unauthorized
            Code: 309
            Description: Token is not valid
    
    Unauthorized_LimitExceeded:
      description: Unauthorized - Token limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            Message: Unauthorized
            Code: 310
            Description: Token limit exceeded
    
    SuccessResponse:
      description: Operation successful
      headers:
        X-Auth-Token:
          schema:
            type: string
          description: Authentication token
        X-RateLimit-Remaining:
          schema:
            type: integer
          description: Number of token uses remaining
        X-RateLimit-Proceeding:
          schema:
            type: integer
          description: Current token usage progress
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            Message: OK
            Code: 100

paths:
  /token:
    post:
      summary: Create authentication token
      description: |
        Creates a JWT token linked to the IP address.
        The token is limited to 5 uses within 15 minutes (configurable in .ENV).
      parameters:
        - $ref: '#/components/parameters/X-Forwarded-For'
      responses:
        '200':
          description: Token created successfully
          headers:
            X-Auth-Token:
              schema:
                type: string
              description: Created JWT token
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: Number of token uses remaining (initially 5)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
              example:
                Message: OK
                Code: 100
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/BadRequest_InvalidIP/content/application~1json/schema'
                  - $ref: '#/components/responses/BadRequest_UndefinedIP/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/InternalError_DeletingToken/content/application~1json/schema'
                  - $ref: '#/components/responses/InternalError_WritingToken/content/application~1json/schema'

  /test:
    get:
      summary: Test endpoint
      description: Sample protected endpoint that requires token authentication
      security:
        - TokenAuth: []
      parameters:
        - $ref: '#/components/parameters/X-Auth-Token'
        - $ref: '#/components/parameters/X-Forwarded-For'
      responses:
        '200':
          $ref: '#/components/responses/SuccessResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/Unauthorized_InvalidToken/content/application~1json/schema'
                  - $ref: '#/components/responses/Unauthorized_LimitExceeded/content/application~1json/schema'
                discriminator:
                  propertyName: Code
                  mapping:
                    309: '#/components/responses/Unauthorized_InvalidToken/content/application~1json/schema'
                    310: '#/components/responses/Unauthorized_LimitExceeded/content/application~1json/schema'